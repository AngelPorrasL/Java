/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Datos.DatosReserva;
import com.toedter.calendar.JDateChooser;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */


/*Para añadir las cosas a la talbla estos son las variables:
    op=Es el que almacena el tipo de habitacion
    reservar=Es el que almacena la cantidad de habitaciones
    fehaIng=Es en el que esta guardado la fecha de ingreso de la reserva
    fehaSali=Es en el que esta guardado la fecha de salida de la reserva
    dias=Es el que esta guardado la cantidad de dias que se hospedan
    NombreU=Es el nombre del usurio
    cc=Es la cedula de usuario
    correo=Es el correo del usuario
    nuReserva=El numero random de la reserva
    
*/



public class MenuReserva extends javax.swing.JFrame {

    /**
     * Creates new form MenuReserva
     */
    public MenuReserva() {
        initComponents();
        this.setResizable(false);
    }
    
    public void calcularDias(JDateChooser fechaInicio,JDateChooser fechaFinal){
        if(fechaInicio.getDate()!=null && fechaFinal.getDate()!=null ){
            Calendar inicio = fechaInicio.getCalendar();
            Calendar terminar = fechaFinal.getCalendar();
            int dias=-1;
            
            while (inicio.before(terminar)  || inicio.equals(terminar)){
                dias++;
                inicio.add(Calendar.DATE,1);
            } 
            JOptionPane.showMessageDialog(null,"Los dias transcurridos son: "+dias);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaInfoHabi = new javax.swing.JTextArea();
        cmbTipoHabi = new javax.swing.JComboBox<>();
        btnTipoHabi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtCantidadHabi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        dcFechaIngreso = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dcFechaSalida = new com.toedter.calendar.JDateChooser();
        btnReservar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Sitka Heading", 2, 36)); // NOI18N
        jLabel1.setText("Bienvenido");

        jLabel2.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        jLabel2.setText("Reservación de la habitación");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Por favor el tipo de habitacion que desea");

        txtaInfoHabi.setColumns(20);
        txtaInfoHabi.setRows(5);
        jScrollPane1.setViewportView(txtaInfoHabi);

        cmbTipoHabi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "Double", "Triple", "Quad", "Queen", "King", "Doble-Doble", "Suite", "Suite presidencial" }));

        btnTipoHabi.setText("Escoger");
        btnTipoHabi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoHabiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("¿Cuantas habitaciones desea reservar?");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Selecione la fecha de ingreso");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Selecione la fecha de salida");

        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cmbTipoHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(btnTipoHabi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCantidadHabi, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)))
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(dcFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(140, 140, 140))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(dcFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(291, 291, 291))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(282, 282, 282))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(316, 316, 316))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbTipoHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidadHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTipoHabi))
                        .addGap(131, 131, 131))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcFechaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106)
                .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTipoHabiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoHabiActionPerformed
        int Nhabitaciones=0;
        float precio=0;
        
        String op = cmbTipoHabi.getSelectedItem().toString();
        if (op.equals("Individual")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Individual:Una habitación asignada a una persona. Puede tener una o más camas.\n");
            precio=100;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=10;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Double")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Double:Una habitación asignada a dos personas. Puede tener una o más camas.\n");
            precio=150;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=7;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Triple")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Triple:Una habitación asignada a tres personas. Puede tener dos o más camas.\n");
            precio=200;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=7;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Quad")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Quad:Una sala asignada a cuatro personas. Puede tener dos o más camas.\n");
            precio=250;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=7;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Queen")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Queen:Una habitación con una cama de matrimonio. Puede ser ocupado por una o más personas.\n");
            precio=200;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=8;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("King")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación King:Una habitación con una cama king-size. Puede ser ocupado por una o más personas.\n");
            precio=200;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=8;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Doble-Doble")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Doble-Doble:Una habitación con dos camas dobles (o tal vez queen). Puede ser ocupado por una o más personas.\n");
            precio=300;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=9;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Suite")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Suite:Una habitación individual con una cama y una sala de estar. A veces, el área para dormir está en un dormitorio separado del salón o la sala de estar.\n");
            precio=350;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=6;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Suite presidencial")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Suite presidencial:Un salón o sala de estar conectada a uno o más dormitorios.\n");
            precio=500;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=2;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
    }//GEN-LAST:event_btnTipoHabiActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        int  disponible=0 ,reservar=0, dias=0 ,Nhabitaciones=0;
        float precio=0, total=0;
         DatosReserva hl=new DatosReserva(precio, (int)total, disponible, reservar, dias);
        
        String op = cmbTipoHabi.getSelectedItem().toString();
        if (op.equals("Individual")){
            precio=100;
            Nhabitaciones=10;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                

                
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            +"\nPrecio de las noches "+dias+" reservadas: $"+hl.getDias(dias,precio)
                                            +"\nFecha de Ingreso: "+fechaIng
                                            +"\nFecha de Retiro: "+fechaSali
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    JOptionPane.showMessageDialog(null,"El numero de reserva es: "+nuReserva);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);;
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("Double")){
            precio=150;
            Nhabitaciones=7;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+"\nPrecio de las noches"+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("Triple")){
            precio=200;
            Nhabitaciones=7;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("Quad")){
            precio=250;
            Nhabitaciones=7;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            } 
        }
        
        if (op.equals("Queen")){
            precio=200;
            Nhabitaciones=8;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("King")){
            precio=200;
            Nhabitaciones=8;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("Doble-Doble")){
            precio=300;
            Nhabitaciones=9;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("Suite")){
            precio=350;
            Nhabitaciones=6;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
               // noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                }
            }
        }
        
        if (op.equals("Suite presidencial")){
            precio=500;
            Nhabitaciones=2;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                
                String diaRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.MONTH));
                String anioRet = Integer.toString(dcFechaSalida.getCalendar().get(Calendar.YEAR));
                String fechaSali = diaRet + "/" + mesRet + "/" + anioRet;
                
                
                calcularDias(dcFechaIngreso,dcFechaSalida);
                //noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) 
                                            //+ "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, dias, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    int nuReserva = (int)(Math.random() * 500+1);
                    NombreU=null;
                    cc=null;
                    correo=null;
                    cmbTipoHabi.setSelectedIndex(0);
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }else{
                    JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    txtCantidadHabi.setText(null);
                }
            }
        }
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        PrincipalHuesped V = new PrincipalHuesped();
        V.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReservar;
    private javax.swing.JButton btnTipoHabi;
    private javax.swing.JButton btnVolver;
    public static javax.swing.JComboBox<String> cmbTipoHabi;
    private com.toedter.calendar.JDateChooser dcFechaIngreso;
    private com.toedter.calendar.JDateChooser dcFechaSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField txtCantidadHabi;
    public static javax.swing.JTextArea txtaInfoHabi;
    // End of variables declaration//GEN-END:variables
}
